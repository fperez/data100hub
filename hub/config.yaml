version: "v0.5.0"

rbac:
  enabled: false

prePuller:
  enabled: true
  image:
    name: ryanlovett/image-allnodes-puller
    tag: 242d8db

hub:
  extraConfig: |
    from kubespawner import KubeSpawner
    from tornado import gen
    import yaml

    # Resolve instructors to one account; eases nbgrader configuration
    c.Authenticator.username_map = {}
    for user in ["rylo", "yuvipanda", "fernando.perez", "jegonzal", "bjiang", "do", "jake_soloff", "nhiquach"]:
        c.Authenticator.username_map[user] = 'instructor'

    class CustomKubeSpawner(KubeSpawner):
      @gen.coroutine
      def start(self):
        with open('/etc/jupyterhub/config/custom.memory') as f:
          custom_attr_lists = yaml.safe_load(f)
          for attr, users in custom_attr_lists.items():
            if self.user.name in users:
              self.mem_limit = attr
              self.mem_guarantee = attr
              break

        with open('/etc/jupyterhub/config/custom.image') as f:
          custom_attr_lists = yaml.safe_load(f)
          for attr, users in custom_attr_lists.items():
            if self.user.name in users:
              self.singleuser_image_spec = attr
              break

        return (yield super().start())
    c.JupyterHub.spawner_class = CustomKubeSpawner

cull:
  enabled: true
  timeout: 3600 # default

auth:
  type: google

singleuser:
  memory:
    guarantee: 2G
    limit: 2G
  image:
    name: "berkeleydsep/singleuser-data100"
  #lifecycleHooks:
  #  postStart:
  #    exec:
  #      command: ["/bin/bash", "/srv/nbgrader/post-start.sh"]
  storage:
    type: hostPath
    extraVolumes:
      - name: home
        hostPath:
          path: /data/homes/{username}
      - name: nbgrader
        hostPath:
          path: /data/homes/_nbgrader
    extraVolumeMounts:
      - name: home
        mountPath: /home/jovyan
      - name: nbgrader
        mountPath: /srv/nbgrader
